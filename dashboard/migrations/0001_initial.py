# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-19 07:02
from __future__ import unicode_literals

import dashboard.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
        ('auth', '0008_alter_user_username_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email Address')),
                ('first_name', models.CharField(blank=True, max_length=50, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=50, verbose_name='Last Name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'users',
                'db_table': 'user',
                'verbose_name': 'user',
            },
            managers=[
                ('objects', dashboard.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_name', models.CharField(choices=[('index', 'Home'), ('privacy', 'Privacy'), ('terms', 'Terms')], max_length=100)),
                ('page_nav_name', models.CharField(blank=True, max_length=500, null=True)),
                ('page_type', models.CharField(choices=[('landing_page', 'Static Landing Page')], default='landing_page', max_length=100)),
                ('title', models.TextField(blank=True, null=True)),
                ('sub_title', models.TextField(blank=True, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('meta_keywords', models.TextField(blank=True, null=True)),
                ('published', models.BooleanField(default=True)),
                ('date_published', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['site_info__site__id', 'page_name'],
            },
        ),
        migrations.CreateModel(
            name='PageItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('configuration', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Page')),
            ],
        ),
        migrations.CreateModel(
            name='SiteFormDataModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_name', models.CharField(max_length=150)),
                ('zipcode', models.CharField(db_index=True, max_length=5)),
                ('DOB', models.DateField(verbose_name='Date of Birth')),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female')], max_length=50)),
                ('type', models.CharField(choices=[('Self', 'Self'), ('Family', 'Family')], max_length=50)),
                ('house_income', models.DecimalField(decimal_places=2, max_digits=20)),
                ('phone', models.TextField()),
                ('firstname', models.CharField(max_length=500, verbose_name='First Name')),
                ('lastname', models.CharField(max_length=500, verbose_name='Last Name')),
                ('email', models.EmailField(db_index=True, max_length=254)),
                ('CSD', models.DateField(verbose_name='Coverage Start Date')),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SiteInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_title', models.TextField(blank=True, null=True)),
                ('title_separator', models.CharField(choices=[('|', '|'), ('-', '-')], default='|', max_length=10)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('email_id', models.EmailField(blank=True, max_length=254, null=True)),
                ('main_heading', models.TextField(blank=True, null=True)),
                ('main_heading_sub', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('published', models.BooleanField(default=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sites.Site', unique=True)),
            ],
            options={
                'ordering': ['site__id'],
                'verbose_name': 'Site Info',
            },
        ),
        migrations.AddField(
            model_name='page',
            name='site_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.SiteInfo'),
        ),
        migrations.AlterUniqueTogether(
            name='pageitem',
            unique_together=set([('page', 'object_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='page',
            unique_together=set([('site_info', 'page_name')]),
        ),
    ]
